<?xml version="1.0"?>
<robot name="copter_gazebo" xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:macro name="dji_f550_gazebo_properties" params="link color transparency" >
		<gazebo reference="${link}">
			<material>Gazebo/${color}</material>
			<visual>
			<transparency>${transparency}</transparency>
			</visual>
		</gazebo>
	</xacro:macro> 

	<xacro:macro name="fake_ray" params="name angle">

  	<joint name="fake_ray_joint_${name}" type="revolute">
    		<origin xyz="0 0 0" rpy="0 0 ${angle}" /> 
    		<parent link="frame" />
    		<child link="fake_arm_${name}" />
		<limit lower="0" upper="0" effort="0" velocity="0" />
  	</joint>

    	<link name="fake_arm_${name}">
		<inertial>
			<mass value="0.0001"/>
			<inertia 	ixx="0" ixy="0" ixz="0" 
					iyy="0" iyz="0" 
					izz="0"/>
		</inertial>
	</link>

  	<joint name="fake_motor_joint_${name}" type="revolute">
    		<origin xyz="0.28 0 0" rpy="0 0 0" /> 
    		<parent link="fake_arm_${name}" />
    		<child link="fake_motor_${name}" />
		<limit lower="0" upper="0" effort="0" velocity="0" />
  	</joint>

    	<link name="fake_motor_${name}">
		<inertial>
			<mass value="0.0001"/>
			<inertia 	ixx="0" ixy="0" ixz="0" 
					iyy="0" iyz="0" 
					izz="0"/>
		</inertial>
	</link>

  	</xacro:macro>

	<xacro:macro name="kinect_base">
	<link name="kinect_link" >
		<origin	xyz="0 0 0" rpy="0 0 0" />
		<inertial>
			<mass value="0.0001"/>
			<inertia 	ixx="0" ixy="0" ixz="0" 
					iyy="0" iyz="0" 
					izz="0"/>
		</inertial>
	</link>

	<joint name="kinect_joint" type="revolute">
		<parent link="frame" />
		<child link="kinect_link" />
		<origin xyz="0 0 0" rpy="0 0 0" />
		<limit lower="0" upper="0" effort="0" velocity="0" />
	</joint>
	<xacro:dji_f550_gazebo_properties link="kinect_link" color="Black" transparency="0"/>
	</xacro:macro>


	<gazebo>
		<plugin name="flyer_plugin" filename="libflyer_plugin.so"/>
		<plugin name="sonar_plugin" filename="libcopter_gazebo_ros_sonar.so"/>
		<!--<plugin name="px4flow_plugin" filename="libpx4flow_plugin.so"/>-->
	</gazebo>

	<gazebo>    
    		<plugin name="imu_plugin" filename="libcopter_gazebo_ros_imu.so">
        		<alwaysOn>true</alwaysOn>       
        		<bodyName>frame</bodyName>
        		<topicName>imu_data</topicName>
        		<gaussianNoise>0.1</gaussianNoise>
        		<updateRate>40.0</updateRate> 
    		</plugin>
	</gazebo>

 <!-- Microsoft Kinect / ASUS Xtion PRO Live for simulation -->
  <xacro:macro name="copter_sim_3dsensor">
    <gazebo reference="camera_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>25.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>320</width>
            <height>240</height>
          </image>
          <clip>
            <near>0.5</near>
            <far>5.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>false</alwaysOn>
          <updateRate>40.0</updateRate>
          <imageTopicName>rgb_image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb_camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.00001</distortion_k1>
          <distortion_k2>0.00001</distortion_k2>
          <distortion_k3>0.00001</distortion_k3>
          <distortion_t1>0.00001</distortion_t1>
          <distortion_t2>0.00001</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo>
  <gazebo reference="camera_rgb_frame">
    <sensor type="camera" name="camera_rgb">
      <update_rate>25.0</update_rate>
      <camera name="head">
        <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
        <image>
          <width>320</width>
          <height>240</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>50</far>
        </clip>
        <noise>
          <type>gaussian</type>
           Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. 
          <mean>0.08</mean>
          <stddev>0.01</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>40.0</updateRate>
        <cameraName>camera/rgb</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_rgb_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.00001</distortionK1>
        <distortionK2>0.00001</distortionK2>
        <distortionK3>0.00001</distortionK3>
        <distortionT1>0.00001</distortionT1>
        <distortionT2>0.00001</distortionT2>
      </plugin>
    </sensor>
  </gazebo>  
  </xacro:macro> 

</robot>
